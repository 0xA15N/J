{
  "address": "0xBe1C77F7Ac95fAD6c27CA01C216B12d6413e6fa7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_baseRegistrar",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getAll",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "label",
              "type": "string"
            }
          ],
          "internalType": "struct IMintedDomainNames.Data[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b5060405161066e38038061066e83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516105e461008a600039600060c601526105e46000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063c78a573814610046578063eb0773421461005b578063fe611a0714610084575b600080fd5b6100596100543660046102e2565b6100bb565b005b61006e610069366004610376565b6101ad565b60405161007b9190610398565b60405180910390f35b6100ad610092366004610376565b6001600160a01b031660009081526020819052604090205490565b60405190815260200161007b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146100f057600080fd5b600080866001600160a01b03166001600160a01b03168152602001908152602001600020604051806060016040528086815260200185815260200184848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250508354600181810186559482526020918290208451600390920201908155908301519381019390935550604081015190919060028201906101a390826104ee565b5050505050505050565b6001600160a01b038116600090815260208181526040808320805482518185028101850190935280835260609492939192909184015b828210156102bb5783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201805461022a90610465565b80601f016020809104026020016040519081016040528092919081815260200182805461025690610465565b80156102a35780601f10610278576101008083540402835291602001916102a3565b820191906000526020600020905b81548152906001019060200180831161028657829003601f168201915b505050505081525050815260200190600101906101e3565b505050509050919050565b80356001600160a01b03811681146102dd57600080fd5b919050565b6000806000806000608086880312156102fa57600080fd5b610303866102c6565b94506020860135935060408601359250606086013567ffffffffffffffff8082111561032e57600080fd5b818801915088601f83011261034257600080fd5b81358181111561035157600080fd5b89602082850101111561036357600080fd5b9699959850939650602001949392505050565b60006020828403121561038857600080fd5b610391826102c6565b9392505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561044057898403603f1901865282518051855288810151898601528701516060888601819052815190860181905283905b80821015610413578282018b015187830160800152908a01906103f5565b8681016080908101869052988b0198601f909101601f1916909601909501945050918701916001016103c0565b50919998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061047957607f821691505b60208210810361049957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104e957600081815260208120601f850160051c810160208610156104c65750805b601f850160051c820191505b818110156104e5578281556001016104d2565b5050505b505050565b815167ffffffffffffffff8111156105085761050861044f565b61051c816105168454610465565b8461049f565b602080601f83116001811461055157600084156105395750858301515b600019600386901b1c1916600185901b1785556104e5565b600085815260208120601f198616915b8281101561058057888601518255948401946001909101908401610561565b508582101561059e5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220afa4ffb7f6ff4b18ad50f8b27875e7721fbb04af8fe40e579e19aee2a542802164736f6c63430008130033",
    "sourceMap": "62:1656:61:-:0;;;386:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;432:30:61;;;62:1656;;14:290:110;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:110;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:110:o;:::-;62:1656:61;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063c78a573814610046578063eb0773421461005b578063fe611a0714610084575b600080fd5b6100596100543660046102e2565b6100bb565b005b61006e610069366004610376565b6101ad565b60405161007b9190610398565b60405180910390f35b6100ad610092366004610376565b6001600160a01b031660009081526020819052604090205490565b60405190815260200161007b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146100f057600080fd5b600080866001600160a01b03166001600160a01b03168152602001908152602001600020604051806060016040528086815260200185815260200184848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250508354600181810186559482526020918290208451600390920201908155908301519381019390935550604081015190919060028201906101a390826104ee565b5050505050505050565b6001600160a01b038116600090815260208181526040808320805482518185028101850190935280835260609492939192909184015b828210156102bb5783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201805461022a90610465565b80601f016020809104026020016040519081016040528092919081815260200182805461025690610465565b80156102a35780601f10610278576101008083540402835291602001916102a3565b820191906000526020600020905b81548152906001019060200180831161028657829003601f168201915b505050505081525050815260200190600101906101e3565b505050509050919050565b80356001600160a01b03811681146102dd57600080fd5b919050565b6000806000806000608086880312156102fa57600080fd5b610303866102c6565b94506020860135935060408601359250606086013567ffffffffffffffff8082111561032e57600080fd5b818801915088601f83011261034257600080fd5b81358181111561035157600080fd5b89602082850101111561036357600080fd5b9699959850939650602001949392505050565b60006020828403121561038857600080fd5b610391826102c6565b9392505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561044057898403603f1901865282518051855288810151898601528701516060888601819052815190860181905283905b80821015610413578282018b015187830160800152908a01906103f5565b8681016080908101869052988b0198601f909101601f1916909601909501945050918701916001016103c0565b50919998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061047957607f821691505b60208210810361049957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104e957600081815260208120601f850160051c810160208610156104c65750805b601f850160051c820191505b818110156104e5578281556001016104d2565b5050505b505050565b815167ffffffffffffffff8111156105085761050861044f565b61051c816105168454610465565b8461049f565b602080601f83116001811461055157600084156105395750858301515b600019600386901b1c1916600185901b1785556104e5565b600085815260208120601f198616915b8281101561058057888601518255948401946001909101908401610561565b508582101561059e5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220afa4ffb7f6ff4b18ad50f8b27875e7721fbb04af8fe40e579e19aee2a542802164736f6c63430008130033",
    "sourceMap": "62:1656:61:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1483:233;;;;;;:::i;:::-;;:::i;:::-;;1011:136;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;687:118;;;;;;:::i;:::-;-1:-1:-1;;;;;767:24:61;744:4;767:24;;;;;;;;;;:31;;687:118;;;;2860:25:110;;;2848:2;2833:18;687:118:61;2714:177:110;1483:233:61;1598:10;-1:-1:-1;;;;;1612:13:61;1598:27;;1590:36;;;;;;1636:17;:24;1654:5;-1:-1:-1;;;;;1636:24:61;-1:-1:-1;;;;;1636:24:61;;;;;;;;;;;;1666:42;;;;;;;;1690:2;1666:42;;;;1694:6;1666:42;;;;1702:5;;1666:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1666:42:61;;;;-1:-1:-1;;1636:73:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1636:73:61;;;;;;;;;;;;;;;:::i;:::-;;;;1483:233;;;;;:::o;1011:136::-;-1:-1:-1;;;;;1116:24:61;;:17;:24;;;;;;;;;;;1109:31;;;;;;;;;;;;;;;;;1065:32;;1109:31;;1116:24;;1109:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1011:136;;;:::o;14:173:110:-;82:20;;-1:-1:-1;;;;;131:31:110;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:803::-;290:6;298;306;314;322;375:3;363:9;354:7;350:23;346:33;343:53;;;392:1;389;382:12;343:53;415:29;434:9;415:29;:::i;:::-;405:39;;491:2;480:9;476:18;463:32;453:42;;542:2;531:9;527:18;514:32;504:42;;597:2;586:9;582:18;569:32;620:18;661:2;653:6;650:14;647:34;;;677:1;674;667:12;647:34;715:6;704:9;700:22;690:32;;760:7;753:4;749:2;745:13;741:27;731:55;;782:1;779;772:12;731:55;822:2;809:16;848:2;840:6;837:14;834:34;;;864:1;861;854:12;834:34;909:7;904:2;895:6;891:2;887:15;883:24;880:37;877:57;;;930:1;927;920:12;877:57;192:803;;;;-1:-1:-1;192:803:110;;-1:-1:-1;961:2:110;953:11;;983:6;192:803;-1:-1:-1;;;192:803:110:o;1000:186::-;1059:6;1112:2;1100:9;1091:7;1087:23;1083:32;1080:52;;;1128:1;1125;1118:12;1080:52;1151:29;1170:9;1151:29;:::i;:::-;1141:39;1000:186;-1:-1:-1;;;1000:186:110:o;1191:1518::-;1379:4;1408:2;1448;1437:9;1433:18;1478:2;1467:9;1460:21;1501:6;1536;1530:13;1567:6;1559;1552:22;1593:2;1583:12;;1626:2;1615:9;1611:18;1604:25;;1688:2;1678:6;1675:1;1671:14;1660:9;1656:30;1652:39;1726:2;1718:6;1714:15;1747:1;1768;1778:902;1794:6;1789:3;1786:15;1778:902;;;1863:22;;;-1:-1:-1;;1859:36:110;1847:49;;1919:13;;1987:9;;1972:25;;2040:11;;;2034:18;2017:15;;;2010:43;2092:11;;2086:18;1955:4;2124:15;;;2117:27;;;2173:19;;2212:15;;;2205:33;;;2262:1;;2276:168;2292:8;2287:3;2284:17;2276:168;;;2401:22;;;2397:31;;2391:38;2367:16;;;2385:3;2363:26;2356:74;2311:12;;;;2276:168;;;2494:21;;;2467:3;2490:30;;;2483:41;;;2658:12;;;;2590:2;2567:17;;;-1:-1:-1;;2563:31:110;2551:44;;;2547:53;;;;-1:-1:-1;;2623:15:110;;;;1820:1;1811:11;1778:902;;;-1:-1:-1;2697:6:110;;1191:1518;-1:-1:-1;;;;;;;;;1191:1518:110:o;2896:127::-;2957:10;2952:3;2948:20;2945:1;2938:31;2988:4;2985:1;2978:15;3012:4;3009:1;3002:15;3028:380;3107:1;3103:12;;;;3150;;;3171:61;;3225:4;3217:6;3213:17;3203:27;;3171:61;3278:2;3270:6;3267:14;3247:18;3244:38;3241:161;;3324:10;3319:3;3315:20;3312:1;3305:31;3359:4;3356:1;3349:15;3387:4;3384:1;3377:15;3241:161;;3028:380;;;:::o;3539:545::-;3641:2;3636:3;3633:11;3630:448;;;3677:1;3702:5;3698:2;3691:17;3747:4;3743:2;3733:19;3817:2;3805:10;3801:19;3798:1;3794:27;3788:4;3784:38;3853:4;3841:10;3838:20;3835:47;;;-1:-1:-1;3876:4:110;3835:47;3931:2;3926:3;3922:12;3919:1;3915:20;3909:4;3905:31;3895:41;;3986:82;4004:2;3997:5;3994:13;3986:82;;;4049:17;;;4030:1;4019:13;3986:82;;;3990:3;;;3630:448;3539:545;;;:::o;4260:1352::-;4386:3;4380:10;4413:18;4405:6;4402:30;4399:56;;;4435:18;;:::i;:::-;4464:97;4554:6;4514:38;4546:4;4540:11;4514:38;:::i;:::-;4508:4;4464:97;:::i;:::-;4616:4;;4680:2;4669:14;;4697:1;4692:663;;;;5399:1;5416:6;5413:89;;;-1:-1:-1;5468:19:110;;;5462:26;5413:89;-1:-1:-1;;4217:1:110;4213:11;;;4209:24;4205:29;4195:40;4241:1;4237:11;;;4192:57;5515:81;;4662:944;;4692:663;3486:1;3479:14;;;3523:4;3510:18;;-1:-1:-1;;4728:20:110;;;4846:236;4860:7;4857:1;4854:14;4846:236;;;4949:19;;;4943:26;4928:42;;5041:27;;;;5009:1;4997:14;;;;4876:19;;4846:236;;;4850:3;5110:6;5101:7;5098:19;5095:201;;;5171:19;;;5165:26;-1:-1:-1;;5254:1:110;5250:14;;;5266:3;5246:24;5242:37;5238:42;5223:58;5208:74;;5095:201;-1:-1:-1;;;;;5342:1:110;5326:14;;;5322:22;5309:36;;-1:-1:-1;4260:1352:110:o",
    "linkReferences": {},
    "immutableReferences": {
      "35942": [
        {
          "start": 198,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "add(address,uint256,uint256,string)": "c78a5738",
    "getAll(address)": "eb077342",
    "getLength(address)": "fe611a07"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baseRegistrar\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getAll\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct IMintedDomainNames.Data[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"add(address,uint256,uint256,string)\":{\"details\":\"Add a user minted domain name, gated to the baseRegistrar contract\",\"params\":{\"expiry\":\"the expiry timestamp of the registered domain name\",\"id\":\"the id of the registered domain name\",\"label\":\"the lable of the registered domain name\",\"owner\":\"The address to add the id to\"}},\"constructor\":{\"details\":\"Iniitalize this contract with the address of the baseRegistrar, so only that contract      can append to the mintedIds mapping\"},\"getAll(address)\":{\"details\":\"Get all user minted domain names\",\"params\":{\"owner\":\"The address to return the list of minted ids of\"},\"returns\":{\"_0\":\"the list of domain names minted by the provided address\"}},\"getLength(address)\":{\"details\":\"Get the length of minted ids for a given address\",\"params\":{\"owner\":\"The address to return the length of minted ids of\"},\"returns\":{\"_0\":\"the number of minted ids for the provided address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ethregistrar/MintedDomainNames.sol\":\"MintedDomainNames\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/ensdomains/\",\":@flare/=lib/flare-smart-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@punkdomains/=lib/punk-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":ensdomains/=lib/ensdomains/\",\":flare-smart-contracts/=lib/flare-smart-contracts/\",\":fns-test/=test/\",\":fns/=src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":punk-contracts/=lib/punk-contracts/contracts/\"]},\"sources\":{\"src/ethregistrar/IMintedDomainNames.sol\":{\"keccak256\":\"0xa6607f68521ceb1cdc7ede38185e88d2b1d2733a3c6efe764f2e4c464d2e931c\",\"urls\":[\"bzz-raw://448bb57a4c96a1ee41c2838bcfe289b383659a9951ec90986716bd89097c4e77\",\"dweb:/ipfs/QmR1Awpag7uHMQxX5rvQPgSMN38xoqq9s8W1NoB9R1EQMC\"]},\"src/ethregistrar/MintedDomainNames.sol\":{\"keccak256\":\"0x00169affba964c89b0a9a90588b1f4ece11b739e5f4163fcb606726cf19d03f2\",\"urls\":[\"bzz-raw://2f54daadbe73e5e55cb3d8cded243206f369316863d95bdddc5884faa8a857ba\",\"dweb:/ipfs/QmbsnZKv52xuwMefrySgX5YA9vXLEJGdp6Seu3UuxAebfW\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_baseRegistrar",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "label",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "add"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAll",
          "outputs": [
            {
              "internalType": "struct IMintedDomainNames.Data[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "label",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "add(address,uint256,uint256,string)": {
            "details": "Add a user minted domain name, gated to the baseRegistrar contract",
            "params": {
              "expiry": "the expiry timestamp of the registered domain name",
              "id": "the id of the registered domain name",
              "label": "the lable of the registered domain name",
              "owner": "The address to add the id to"
            }
          },
          "constructor": {
            "details": "Iniitalize this contract with the address of the baseRegistrar, so only that contract      can append to the mintedIds mapping"
          },
          "getAll(address)": {
            "details": "Get all user minted domain names",
            "params": {
              "owner": "The address to return the list of minted ids of"
            },
            "returns": {
              "_0": "the list of domain names minted by the provided address"
            }
          },
          "getLength(address)": {
            "details": "Get the length of minted ids for a given address",
            "params": {
              "owner": "The address to return the length of minted ids of"
            },
            "returns": {
              "_0": "the number of minted ids for the provided address"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=lib/ensdomains/",
        ":@flare/=lib/flare-smart-contracts/contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@punkdomains/=lib/punk-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":ensdomains/=lib/ensdomains/",
        ":flare-smart-contracts/=lib/flare-smart-contracts/",
        ":fns-test/=test/",
        ":fns/=src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":punk-contracts/=lib/punk-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/ethregistrar/MintedDomainNames.sol": "MintedDomainNames"
      },
      "libraries": {}
    },
    "sources": {
      "src/ethregistrar/IMintedDomainNames.sol": {
        "keccak256": "0xa6607f68521ceb1cdc7ede38185e88d2b1d2733a3c6efe764f2e4c464d2e931c",
        "urls": [
          "bzz-raw://448bb57a4c96a1ee41c2838bcfe289b383659a9951ec90986716bd89097c4e77",
          "dweb:/ipfs/QmR1Awpag7uHMQxX5rvQPgSMN38xoqq9s8W1NoB9R1EQMC"
        ],
        "license": null
      },
      "src/ethregistrar/MintedDomainNames.sol": {
        "keccak256": "0x00169affba964c89b0a9a90588b1f4ece11b739e5f4163fcb606726cf19d03f2",
        "urls": [
          "bzz-raw://2f54daadbe73e5e55cb3d8cded243206f369316863d95bdddc5884faa8a857ba",
          "dweb:/ipfs/QmbsnZKv52xuwMefrySgX5YA9vXLEJGdp6Seu3UuxAebfW"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/ethregistrar/MintedDomainNames.sol",
    "id": 36016,
    "exportedSymbols": {
      "IMintedDomainNames": [35908],
      "MintedDomainNames": [36015]
    },
    "nodeType": "SourceUnit",
    "src": "0:1718:61",
    "nodes": [
      {
        "id": 35931,
        "nodeType": "PragmaDirective",
        "src": "0:24:61",
        "nodes": [],
        "literals": ["solidity", ">=", "0.8", ".4"]
      },
      {
        "id": 35932,
        "nodeType": "ImportDirective",
        "src": "26:34:61",
        "nodes": [],
        "absolutePath": "src/ethregistrar/IMintedDomainNames.sol",
        "file": "./IMintedDomainNames.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36016,
        "sourceUnit": 35909,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36015,
        "nodeType": "ContractDefinition",
        "src": "62:1656:61",
        "nodes": [
          {
            "id": 35940,
            "nodeType": "VariableDeclaration",
            "src": "117:63:61",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mintedDomainNames",
            "nameLocation": "163:17:61",
            "scope": 36015,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Data_$35887_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct IMintedDomainNames.Data[])"
            },
            "typeName": {
              "id": 35939,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 35935,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "125:7:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "117:45:61",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Data_$35887_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct IMintedDomainNames.Data[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 35937,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 35936,
                    "name": "IMintedDomainNames.Data",
                    "nameLocations": ["136:18:61", "155:4:61"],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 35887,
                    "src": "136:23:61"
                  },
                  "referencedDeclaration": 35887,
                  "src": "136:23:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Data_$35887_storage_ptr",
                    "typeString": "struct IMintedDomainNames.Data"
                  }
                },
                "id": 35938,
                "nodeType": "ArrayTypeName",
                "src": "136:25:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Data_$35887_storage_$dyn_storage_ptr",
                  "typeString": "struct IMintedDomainNames.Data[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 35942,
            "nodeType": "VariableDeclaration",
            "src": "186:31:61",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "baseRegistrar",
            "nameLocation": "204:13:61",
            "scope": 36015,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 35941,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "186:7:61",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 35953,
            "nodeType": "FunctionDefinition",
            "src": "386:83:61",
            "nodes": [],
            "body": {
              "id": 35952,
              "nodeType": "Block",
              "src": "422:47:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 35950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35948,
                      "name": "baseRegistrar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35942,
                      "src": "432:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 35949,
                      "name": "_baseRegistrar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35945,
                      "src": "448:14:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "432:30:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 35951,
                  "nodeType": "ExpressionStatement",
                  "src": "432:30:61"
                }
              ]
            },
            "documentation": {
              "id": 35943,
              "nodeType": "StructuredDocumentation",
              "src": "224:157:61",
              "text": " @dev Iniitalize this contract with the address of the baseRegistrar, so only that contract\n      can append to the mintedIds mapping"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 35946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35945,
                  "mutability": "mutable",
                  "name": "_baseRegistrar",
                  "nameLocation": "406:14:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 35953,
                  "src": "398:22:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "398:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "397:24:61"
            },
            "returnParameters": {
              "id": 35947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "422:0:61"
            },
            "scope": 36015,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35967,
            "nodeType": "FunctionDefinition",
            "src": "687:118:61",
            "nodes": [],
            "body": {
              "id": 35966,
              "nodeType": "Block",
              "src": "750:55:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 35961,
                        "name": "mintedDomainNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35940,
                        "src": "767:17:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Data_$35887_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct IMintedDomainNames.Data storage ref[] storage ref)"
                        }
                      },
                      "id": 35963,
                      "indexExpression": {
                        "id": 35962,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35956,
                        "src": "785:5:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "767:24:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Data_$35887_storage_$dyn_storage",
                        "typeString": "struct IMintedDomainNames.Data storage ref[] storage ref"
                      }
                    },
                    "id": 35964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "792:6:61",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "767:31:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35960,
                  "id": 35965,
                  "nodeType": "Return",
                  "src": "760:38:61"
                }
              ]
            },
            "documentation": {
              "id": 35954,
              "nodeType": "StructuredDocumentation",
              "src": "475:207:61",
              "text": " @dev Get the length of minted ids for a given address\n @param owner The address to return the length of minted ids of\n @return the number of minted ids for the provided address"
            },
            "functionSelector": "fe611a07",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLength",
            "nameLocation": "696:9:61",
            "parameters": {
              "id": 35957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35956,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "714:5:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 35967,
                  "src": "706:13:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35955,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "705:15:61"
            },
            "returnParameters": {
              "id": 35960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35959,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35967,
                  "src": "744:4:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35958,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:4:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "743:6:61"
            },
            "scope": 36015,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35982,
            "nodeType": "FunctionDefinition",
            "src": "1011:136:61",
            "nodes": [],
            "body": {
              "id": 35981,
              "nodeType": "Block",
              "src": "1099:48:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 35977,
                      "name": "mintedDomainNames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35940,
                      "src": "1116:17:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Data_$35887_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct IMintedDomainNames.Data storage ref[] storage ref)"
                      }
                    },
                    "id": 35979,
                    "indexExpression": {
                      "id": 35978,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35970,
                      "src": "1134:5:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1116:24:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Data_$35887_storage_$dyn_storage",
                      "typeString": "struct IMintedDomainNames.Data storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 35976,
                  "id": 35980,
                  "nodeType": "Return",
                  "src": "1109:31:61"
                }
              ]
            },
            "baseFunctions": [35896],
            "documentation": {
              "id": 35968,
              "nodeType": "StructuredDocumentation",
              "src": "811:195:61",
              "text": " @dev Get all user minted domain names\n @param owner The address to return the list of minted ids of\n @return the list of domain names minted by the provided address"
            },
            "functionSelector": "eb077342",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAll",
            "nameLocation": "1020:6:61",
            "parameters": {
              "id": 35971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35970,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1035:5:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 35982,
                  "src": "1027:13:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1027:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1026:15:61"
            },
            "returnParameters": {
              "id": 35976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35975,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35982,
                  "src": "1065:32:61",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Data_$35887_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IMintedDomainNames.Data[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 35973,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 35972,
                        "name": "IMintedDomainNames.Data",
                        "nameLocations": ["1065:18:61", "1084:4:61"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 35887,
                        "src": "1065:23:61"
                      },
                      "referencedDeclaration": 35887,
                      "src": "1065:23:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$35887_storage_ptr",
                        "typeString": "struct IMintedDomainNames.Data"
                      }
                    },
                    "id": 35974,
                    "nodeType": "ArrayTypeName",
                    "src": "1065:25:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Data_$35887_storage_$dyn_storage_ptr",
                      "typeString": "struct IMintedDomainNames.Data[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1064:34:61"
            },
            "scope": 36015,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 36014,
            "nodeType": "FunctionDefinition",
            "src": "1483:233:61",
            "nodes": [],
            "body": {
              "id": 36013,
              "nodeType": "Block",
              "src": "1580:136:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 35995,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1598:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 35996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1602:6:61",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1598:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 35997,
                          "name": "baseRegistrar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35942,
                          "src": "1612:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1598:27:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 35994,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1590:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 35999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1590:36:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36000,
                  "nodeType": "ExpressionStatement",
                  "src": "1590:36:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 36007,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35987,
                            "src": "1690:2:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 36008,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35989,
                            "src": "1694:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 36009,
                            "name": "label",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35991,
                            "src": "1702:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "expression": {
                            "id": 36005,
                            "name": "IMintedDomainNames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35908,
                            "src": "1666:18:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IMintedDomainNames_$35908_$",
                              "typeString": "type(contract IMintedDomainNames)"
                            }
                          },
                          "id": 36006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1685:4:61",
                          "memberName": "Data",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35887,
                          "src": "1666:23:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Data_$35887_storage_ptr_$",
                            "typeString": "type(struct IMintedDomainNames.Data storage pointer)"
                          }
                        },
                        "id": 36010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1666:42:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$35887_memory_ptr",
                          "typeString": "struct IMintedDomainNames.Data memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Data_$35887_memory_ptr",
                          "typeString": "struct IMintedDomainNames.Data memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 36001,
                          "name": "mintedDomainNames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35940,
                          "src": "1636:17:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Data_$35887_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct IMintedDomainNames.Data storage ref[] storage ref)"
                          }
                        },
                        "id": 36003,
                        "indexExpression": {
                          "id": 36002,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35985,
                          "src": "1654:5:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1636:24:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Data_$35887_storage_$dyn_storage",
                          "typeString": "struct IMintedDomainNames.Data storage ref[] storage ref"
                        }
                      },
                      "id": 36004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1661:4:61",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1636:29:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Data_$35887_storage_$dyn_storage_ptr_$_t_struct$_Data_$35887_storage_$returns$__$attached_to$_t_array$_t_struct$_Data_$35887_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct IMintedDomainNames.Data storage ref[] storage pointer,struct IMintedDomainNames.Data storage ref)"
                      }
                    },
                    "id": 36011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1636:73:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36012,
                  "nodeType": "ExpressionStatement",
                  "src": "1636:73:61"
                }
              ]
            },
            "baseFunctions": [35907],
            "documentation": {
              "id": 35983,
              "nodeType": "StructuredDocumentation",
              "src": "1153:325:61",
              "text": " @dev Add a user minted domain name, gated to the baseRegistrar contract\n @param owner The address to add the id to\n @param id the id of the registered domain name\n @param expiry the expiry timestamp of the registered domain name\n @param label the lable of the registered domain name"
            },
            "functionSelector": "c78a5738",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nameLocation": "1492:3:61",
            "parameters": {
              "id": 35992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35985,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1513:5:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 36014,
                  "src": "1505:13:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1505:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35987,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1528:2:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 36014,
                  "src": "1520:10:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35989,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "1540:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 36014,
                  "src": "1532:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1532:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35991,
                  "mutability": "mutable",
                  "name": "label",
                  "nameLocation": "1564:5:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 36014,
                  "src": "1548:21:61",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35990,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1548:6:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1495:75:61"
            },
            "returnParameters": {
              "id": 35993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1580:0:61"
            },
            "scope": 36015,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 35933,
              "name": "IMintedDomainNames",
              "nameLocations": ["92:18:61"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35908,
              "src": "92:18:61"
            },
            "id": 35934,
            "nodeType": "InheritanceSpecifier",
            "src": "92:18:61"
          }
        ],
        "canonicalName": "MintedDomainNames",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [36015, 35908],
        "name": "MintedDomainNames",
        "nameLocation": "71:17:61",
        "scope": 36016,
        "usedErrors": []
      }
    ]
  },
  "id": 61
}
